name: Full
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: agent
            platform: linux/arm/v7,linux/arm64/v8,linux/amd64
            setup-qemu: true
          - project: api
            platform: linux/amd64
            setup-qemu: false
          - project: web
            platform: linux/amd64
            setup-qemu: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: "v(.*)"
      - name: Get image names
        id: image
        run: |
              echo "latest=vanflux/rm-${{ matrix.project }}" >> $GITHUB_OUTPUT
              echo "versioned=vanflux/rm-${{ matrix.project }}:${{ steps.tagName.outputs.tag }}" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ matrix.setup-qemu }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build image
        run: docker buildx build --platform ${{ matrix.platform }} --build-arg "VERSION=${{ steps.tagName.outputs.tag }}" --tag vanflux/rm-${{ matrix.project }} ${{ matrix.project }}
      - name: Tag versioned image
        run: docker tag ${{ steps.image.outputs.latest }} ${{ steps.image.outputs.versioned }}
      - name: Versioned push
        run: docker push ${{ steps.image.outputs.versioned }}
      - name: Push latest
        run: docker push ${{ steps.image.outputs.latest }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: cd ~/services && ./deploy-rm.sh
